{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/features/bidding/Card.ts","webpack:///./src/app/features/bidding/bid-game/bid-game.component.css","webpack:///./src/app/features/bidding/bid-game/bid-game.component.html","webpack:///./src/app/features/bidding/bid-game/bid-game.component.ts","webpack:///./src/app/features/bidding/bid-lesson.service.ts","webpack:///./src/app/features/bidding/bid-lesson/bid-lesson.component.css","webpack:///./src/app/features/bidding/bid-lesson/bid-lesson.component.html","webpack:///./src/app/features/bidding/bid-lesson/bid-lesson.component.ts","webpack:///./src/app/features/bidding/bid-lessons-home/bid-lessons-home.component.css","webpack:///./src/app/features/bidding/bid-lessons-home/bid-lessons-home.component.html","webpack:///./src/app/features/bidding/bid-lessons-home/bid-lessons-home.component.ts","webpack:///./src/app/features/features.module.ts","webpack:///./src/app/features/home/home.component.css","webpack:///./src/app/features/home/home.component.html","webpack:///./src/app/features/home/home.component.ts","webpack:///./src/app/features/routes.ts","webpack:///./src/app/features/tutorial-reader/Tutorial.ts","webpack:///./src/app/features/tutorial-reader/tutorial-reader.component.css","webpack:///./src/app/features/tutorial-reader/tutorial-reader.component.html","webpack:///./src/app/features/tutorial-reader/tutorial-reader.component.ts","webpack:///./src/app/shared/footer/footer.component.css","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/header/header.component.css","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/tilecard/tilecard.component.css","webpack:///./src/app/shared/tilecard/tilecard.component.html","webpack:///./src/app/shared/tilecard/tilecard.component.ts","webpack:///./src/app/shared/tutorial-dialog/tutorial-dialog.component.css","webpack:///./src/app/shared/tutorial-dialog/tutorial-dialog.component.html","webpack:///./src/app/shared/tutorial-dialog/tutorial-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"mat-app-background basic-container\\\">\\n  <app-header></app-header>\\n  <router-outlet></router-outlet>\\n  <app-footer style=\\\"text-align:center\\\"></app-footer>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule,  } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FeaturesModule } from './features/features.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FeaturesModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Card {\n    name: string = \"\";\n    Hpoint?: number = 0;\n    imgSrc?: string;\n}","module.exports = \".header-spacer {\\n flex: 1 1 auto;\\n}\\n\\n.grid-container {\\n    display: -ms-inline-grid;\\n    display: inline-grid;\\n    width: 100%;\\n    -ms-grid-columns: auto auto auto;\\n        grid-template-columns: auto auto auto;\\n    background-color: #2196F3;\\n    padding: 5px;\\n}\\n\\n.grid-container > div {\\n    padding: 5px;\\n}\\n\\n.canvasCol {\\n    -ms-grid-column: 1;\\n        grid-column-start: 1;\\n    -ms-grid-column-span: 2;\\n    grid-column-end: 3;\\n}\\n\\n.col {\\n    -ms-grid-column: 4;\\n        grid-column-start: 4;\\n    -ms-grid-column-span: 0;\\n    grid-column-end: 4; \\n}\"","module.exports = \"<div class=\\\"row\\\"> \\n<mat-toolbar style=\\\" border-bottom: 2px dotted #003300;\\\">\\n  <a (click)=\\\"back()\\\"><span><i class=\\\"header-icon material-icons\\\">arrow_back</i></span></a>\\n  <span class=\\\"header-spacer\\\"></span>\\n<span>{{currentExercise.name}}</span>\\n</mat-toolbar>\\n</div>\\n\\n<img #c_0 src=\\\"{{cardImgSrcs[0]}}\\\" (load)=\\\"drawCard(0)\\\" style='display: none;' />\\n<img #c_1 src=\\\"{{cardImgSrcs[1]}}\\\" (load)=\\\"drawCard(1)\\\" style='display: none;' />\\n<img #c_2 src=\\\"{{cardImgSrcs[2]}}\\\" (load)=\\\"drawCard(2)\\\" style='display: none;' />\\n<img #c_3 src=\\\"{{cardImgSrcs[3]}}\\\" (load)=\\\"drawCard(3)\\\" style='display: none;' />\\n<img #c_4 src=\\\"{{cardImgSrcs[4]}}\\\" (load)=\\\"drawCard(4)\\\" style='display: none;' />\\n<img #c_5 src=\\\"{{cardImgSrcs[5]}}\\\" (load)=\\\"drawCard(5)\\\" style='display: none;' />\\n<img #c_6 src=\\\"{{cardImgSrcs[6]}}\\\" (load)=\\\"drawCard(6)\\\" style='display: none;' />\\n<img #c_7 src=\\\"{{cardImgSrcs[7]}}\\\" (load)=\\\"drawCard(7)\\\" style='display: none;' />\\n<img #c_8 src=\\\"{{cardImgSrcs[8]}}\\\" (load)=\\\"drawCard(8)\\\" style='display: none;' />\\n<img #c_9 src=\\\"{{cardImgSrcs[9]}}\\\" (load)=\\\"drawCard(9)\\\" style='display: none;' />\\n<img #c_10 src=\\\"{{cardImgSrcs[10]}}\\\" (load)=\\\"drawCard(10)\\\" style='display: none;' />\\n<img #c_11 src=\\\"{{cardImgSrcs[11]}}\\\" (load)=\\\"drawCard(11)\\\" style='display: none;' />\\n<img #c_12 src=\\\"{{cardImgSrcs[12]}}\\\" (load)=\\\"drawCard(12)\\\" style='display: none;' />\\n<img #biddings src=\\\"assets/images/bidding-cards.png\\\" (load)=\\\"drawBidding()\\\" style='display: none;'/>\\n\\n<div class=\\\"grid-container\\\"> \\n    <div class=\\\"canvasCol\\\">\\n       <canvas #canvas width=\\\"{{canvasWidth}}\\\" height=\\\"{{canvasHeight}}\\\" style=\\\"background:#003300;\\\"></canvas>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\n            <mat-step *ngFor=\\\"let inst of currentExercise.instructions\\\">\\n                <ng-template matStepLabel>{{inst.label}}</ng-template>\\n                <div>\\n                   {{inst.subPart}}\\n                </div>\\n            </mat-step>\\n            <mat-step>\\n                <ng-template matStepLabel>Select your bid</ng-template>\\n                <div>\\n                    <button  mat-icon-button color=\\\"primary\\\" (click)=\\\"validate()\\\"><mat-icon>looks</mat-icon></button>\\n                    <button  mat-icon-button color=\\\"primary\\\" (click)=\\\"next()\\\"><mat-icon>navigate_next</mat-icon></button>\\n                    {{this.message}}\\n                </div>\\n            </mat-step>\\n        </mat-vertical-stepper>\\n    </div>\\n    <!-- \\n    <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile [colspan]=4 [rowspan]=5>\\n            <canvas #canvas width=\\\"{{canvasWidth}}\\\" height=\\\"{{canvasHeight}}\\\" style=\\\"background:#003300;\\\"></canvas>\\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=1 [rowspan]=5>\\n            <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\n                <mat-step>\\n                  <ng-template matStepLabel>Count you HD points</ng-template>\\n                </mat-step>\\n                <mat-step>\\n                    <ng-template matStepLabel>{{currentExercise.instructions}}</ng-template>\\n                </mat-step>\\n            </mat-vertical-stepper>\\n            \\n        </mat-grid-tile>\\n        <mat-grid-tile [colspan]=4 [rowspan]=1>\\n            <button  mat-icon-button color=\\\"primary\\\" (click)=\\\"validate()\\\"><mat-icon>looks</mat-icon></button>\\n            <button  mat-icon-button color=\\\"primary\\\" (click)=\\\"next()\\\"><mat-icon>navigate_next</mat-icon></button>\\n    \\n        </mat-grid-tile>\\n    </mat-grid-list>\\n-->\\n</div>\\n\\n\\n\"","import { Component, OnInit, ViewChild,  AfterViewInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BidLessonService} from '../bid-lesson.service';\nimport { Hand } from '../Hand';\nimport { Card } from '../Card';\nimport { fromEvent } from 'rxjs';\nimport { BidLesson } from '../BidLesson';\nimport { BidExercise } from '../BidExercise';\n\n/**\n * Present the Bidding Game: the bottom part presents the 13 cards of the player he will use\n * to bid.\n * The top left has the current bidding sequence, the right bottom the potential bid to select from\n * The right column has principles for the exercises and explanation for the solution\n */\n@Component({\n  selector: 'app-bid-game',\n  templateUrl: './bid-game.component.html',\n  styleUrls: ['./bid-game.component.css']\n})\nexport class BidGameComponent implements AfterViewInit {\n\n  @ViewChild('canvas') canvas: ElementRef;\n  @ViewChild('c_0') c_0: ElementRef;\n  @ViewChild('c_1') c_1: ElementRef;\n  @ViewChild('c_2') c_2: ElementRef;\n  @ViewChild('c_3') c_3: ElementRef;\n  @ViewChild('c_4') c_4: ElementRef;\n  @ViewChild('c_5') c_5: ElementRef;\n  @ViewChild('c_6') c_6: ElementRef;\n  @ViewChild('c_7') c_7: ElementRef;\n  @ViewChild('c_8') c_8: ElementRef;\n  @ViewChild('c_9') c_9: ElementRef;\n  @ViewChild('c_10') c_10: ElementRef;\n  @ViewChild('c_11') c_11: ElementRef;\n  @ViewChild('c_12') c_12: ElementRef;\n  @ViewChild('biddings') biddingImg: ElementRef;\n\n  private canvasContext: CanvasRenderingContext2D;\n  canvasWidth: number = 1000;\n  canvasHeight: number = 500;\n  cardWidth: number = 85;\n  cardHeight: number = 110;\n  // dimensions for the bidding box on right bottom part of canvas\n  biddingWidth: number = 250;\n  biddingHeight: number = 220;\n  biddingX: number = this.canvasWidth - 10 - this.biddingWidth;\n  biddingY: number = this.canvasHeight - 10 - this.biddingHeight;\n  biddingXStep: number =23;\n  biddingYStep: number = 15;\n  colorText: string[] = [ \"C\",\"D\",\"H\",\"S\",\"NT\"];\n  // keep reference to each image html element to be used for drawing. The key is\n  // the card code c_* of the player's cards\n  cardImgs = new Map<string,ElementRef>();\n  // 13 images may have different image card\n  cardImgSrcs: string[] =[];\n  // specific to the game\n  hand: Hand;\n  lesson: BidLesson;\n\n  currentExercise : BidExercise;\n  message: string = \"\";\n  indexExercise: number = 0;\n  // what user selected with the mouse\n  bidValue: number = 0;\n  bidColor: number = 0;\n\n  /**\n   * Get the current lesson with tutoials and exercises to process in this game\n   * @param router \n   * @param bidService to access to backend\n   */\n  constructor(private router: Router,\n    private bidService: BidLessonService) { \n    // need to know which exercice was selected from the lesson page as a lesson has mutliple exercise\n    this.currentExercise = this.bidService.getBidExercise();\n    this.bidService.getLesson().subscribe(data => {\n      this.lesson = data;\n    });\n    this.hand=this.currentExercise.hands[0];\n    this.loadCardImageNames();\n  }\n\n  loadCardImageNames(){\n    for( var i = 0; i<13; i++) {\n      this.cardImgSrcs[i]=\"assets/images/cards/\"+this.hand.cards[i].imgSrc+\".png\";\n    }\n  }\n\n  back(){\n    this.router.navigate(['bidLesson']);\n  }\n\n  // Go to the next exercise of the current lesson\n  next(){\n    this.indexExercise++;\n    if (this.indexExercise <= this.lesson.exercises.length) {\n      this.currentExercise = this.lesson.exercises[ this.indexExercise];\n      this.bidService.processCards(this.currentExercise);\n      this.hand=this.currentExercise.hands[0];\n      this.bidValue=0;\n      this.loadCardImageNames();\n    } else {\n      this.message = \"No more exercice, change lesson by going back to the lessons home page.\";\n    }\n    this.drawTable();\n  }\n\n  validate(){\n    console.log(\"Validate the bid match solution\");\n    if (this.currentExercise.solution == (this.bidValue +  this.colorText[this.bidColor])){\n      this.message = \"Right...\";\n    } else {\n      this.message = \"Not yet\";\n    }\n  }\n\n  ngAfterViewInit() {\n    this.canvasContext = this.canvas.nativeElement.getContext(\"2d\");\n    this.cardImgs.set(\"c_0\",this.c_0);\n    this.cardImgs.set(\"c_1\",this.c_1);\n    this.cardImgs.set(\"c_2\",this.c_2);\n    this.cardImgs.set(\"c_3\",this.c_3);\n    this.cardImgs.set(\"c_4\",this.c_4);\n    this.cardImgs.set(\"c_5\",this.c_5);\n    this.cardImgs.set(\"c_6\",this.c_6);\n    this.cardImgs.set(\"c_7\",this.c_7);\n    this.cardImgs.set(\"c_8\",this.c_8);\n    this.cardImgs.set(\"c_9\",this.c_9);\n    this.cardImgs.set(\"c_10\",this.c_10);\n    this.cardImgs.set(\"c_11\",this.c_11);\n    this.cardImgs.set(\"c_12\",this.c_12);\n    this.captureEvents(this.canvas.nativeElement);\n    this.drawTable();\n  }\n\n  drawTable(){\n    if (this.canvasContext) {\n      this.canvasContext.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n      for (var i = 0; i < 13; i++) {\n        this.drawCard(i)\n      }\n      this.drawBiddingText();\n      this.drawBidding();\n    }\n  }\n\n  drawCard(ref:number) { \n    let cardXStep: number = 25;\n    let element: HTMLImageElement = this.cardImgs.get(\"c_\"+ref).nativeElement;\n    let image:HTMLImageElement = new Image();\n    image.src=this.cardImgSrcs[ref];\n    image.onload = ()=> {\n      this.canvasContext.drawImage(image, \n      this.canvasWidth / 2 - 7 * cardXStep + ref * cardXStep,\n      this.canvasHeight - this.cardHeight - 20 , \n      this.cardWidth, this.cardHeight);\n      }\n  }\n\n  drawBiddingText(){\n    this.canvasContext.font=\"20px Georgia\";\n    this.canvasContext.fillStyle = \"white\";\n    this.canvasContext.clearRect(0, 0, 100, 60);\n    this.canvasContext.fillText(\" S    W   \" + \"  N    E\",5,17);\n   // this.context.fillText(\"1C   -  \" + \" 2C   -\",5,34);\n    if (this.bidValue != 0) {\n      this.canvasContext.fillText(this.bidValue +  this.colorText[this.bidColor],5,34);\n    }\n    this.canvasContext.fillText(\"North\", 420,20);\n    this.canvasContext.fillText(\"South\", 420,270);\n    this.canvasContext.fillText(\"East\", 650,150);\n    this.canvasContext.fillText(\"West\", 30,150);\n  }\n\n  /**\n   * Draw bidding images and remove the bids that could not be done now due to last\n   * previous bid\n   */\n  drawBidding(){\n    this.canvasContext.drawImage(this.biddingImg.nativeElement,\n        this.biddingX,\n        this.biddingY,\n        this.biddingWidth,\n        this.biddingHeight);\n    let color =  this.canvasContext.fillStyle;\n    this.canvasContext.fillStyle = \"#003300\";\n    \n    for (let i = 0;i<this.bidValue;i++) {\n      this.canvasContext.fillRect( \n        this.biddingX, \n        this.biddingY,\n        this.biddingXStep * 5,\n        i * this.biddingYStep\n        );\n    }\n    this.canvasContext.fillRect( \n      this.biddingX + this.biddingXStep * (4 - this.bidColor), \n      this.biddingY,\n      this.biddingXStep * (1 + this.bidColor) ,\n      this.bidValue * this.biddingYStep\n    );\n    this.canvasContext.fillStyle = color;\n  }\n\n\n  captureEvents(element: HTMLCanvasElement) {\n    fromEvent(element,'mousedown').subscribe((res: MouseEvent) => {\n      let rect = element.getBoundingClientRect();\n      let x = res.clientX - rect.left;\n      let y = res.clientY - rect.top;\n      console.log(x,y);\n      this.bidColor = 5 - Math.round((x-this.biddingX) / this.biddingXStep)\n      if (this.bidColor < 0) {\n        this.bidColor = 0;\n      }\n      if (this.bidColor > 4) {\n        this.bidColor = 4;\n      }\n      this.bidValue = Math.round((y-this.biddingY) / this.biddingYStep);\n      if (this.bidValue > 7) {\n        this.bidValue = 7;\n      }\n      console.log( this.bidValue +  ' of ' + this.bidColor);\n      this.drawBidding();\n      this.drawBiddingText();\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Hand } from './Hand';\nimport { Card } from './Card';\nimport { BidLesson } from './BidLesson';\nimport { BidExercise } from './BidExercise';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from  'rxjs/operators';\nimport { Tutorial } from '../tutorial-reader/Tutorial';\n/*\n* Service to manage bidding lessons and support sharing data between \nsibbling components\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class BidLessonService {\n  lessonCategoryName: string;  // opening or defense, or... will match a json document\n  currentTutorial: Tutorial;\n  currentExercise: BidExercise;\n  lesson: BidLesson;\n  biddingAPIurl: string = \"http://localhost:5000/api/biddings/\";\n  \n  constructor(private http: HttpClient) { }\n\n  setLessonCategoryName(l:string){\n    this.lessonCategoryName = l;\n  }\n  \n  getLessonCategoryName(){\n    return  this.lessonCategoryName;\n  }\n\n  getLesson(): Observable<BidLesson> {\n    if (this.lesson === undefined) {\n        // get these using the user and category name\n        return this.http.get<BidLesson>(this.biddingAPIurl + \"lessons/\" + this.getLessonCategoryName())\n        .pipe(map(\n          data => { this.lesson =  data;            \n                  return this.lesson},\n          error => {console.log(\"Error to get lesson \" + error)}\n        ))\n    } else {\n      return of(this.lesson);\n    }\n  }\n\n  getCurrentLesson(){\n    return this.lesson;\n  }\n\n  setBidExercise(exo: BidExercise) {\n    this.currentExercise = exo;\n    this.processCards(exo);\n  }\n\n  getBidExercise() {\n    return this.currentExercise;\n  }\n\n  setTutorial(tutorial: Tutorial){\n    this.currentTutorial = tutorial;\n  }\n\n  /**\n   * In the Bid exercice the list of card is an array of strings\n   * [\"AS\",\"KS\",\"QS\",\"7S....\n   * The second letter represents the color of the card. \n   * Transform string list to a card list\n   * @param list of cards\n   */\n  processCards(e: BidExercise) {\n        e.hands[0].cards=[]\n        e.hands[0].cardsAsString.forEach( c => {\n           let card:Card = new Card();\n           card.name=c;\n           card.imgSrc=c[0]+\"-of-\";\n           if (c[1] == \"C\") {\n            card.imgSrc+=\"CLUBS\";\n           }\n           if (c[1] == \"S\") {\n            card.imgSrc+=\"SPADES\";\n           }\n           if (c[1] == \"D\") {\n            card.imgSrc+=\"DIAMONDS\";\n           }\n           if (c[1] == \"H\") {\n            card.imgSrc+=\"HEARTS\";\n           }\n           e.hands[0].cards.push(card);\n        })\n    return e;\n  }\n}\n","module.exports = \"table {\\nwidth: 100%;\\n}\\n\\n.header-spacer {\\nflex: 1 1 auto;\\n}\\n\\n.header-icon {\\npadding: 0 14px;\\n}\\n\\nth.mat-sort-header-sorted {\\ncolor: black;\\n}\"","module.exports = \"\\n<mat-toolbar *ngIf=\\\"! selectedTutorial\\\">\\n    <a (click)=\\\"back()\\\"><span><i class=\\\"header-icon material-icons\\\">arrow_back</i></span></a>\\n    <span class=\\\"header-spacer\\\"></span>\\n<span>{{title}}</span>\\n</mat-toolbar>\\n<div class=\\\"row\\\" *ngIf=\\\"! selectedTutorial\\\">\\n    <h3>Tutorials</h3>\\n    <table mat-table [dataSource]=\\\"lesson.tutorials\\\" matSort class=\\\"mat-elevation-z8\\\">\\n       <!-- Name Column -->\\n       <ng-container matColumnDef=\\\"name\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n        </ng-container>\\n        <!-- Actions Column -->\\n      <ng-container matColumnDef=\\\"actions\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"learn(element)\\\"><mat-icon>play_arrow</mat-icon></button>\\n           </mat-cell>\\n        </ng-container>\\n        <mat-header-row *matHeaderRowDef=\\\"tutDisplayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: tutDisplayedColumns;\\\"></mat-row>\\n    </table>\\n    <h3>Exercises</h3>\\n    <table mat-table [dataSource]=\\\"lesson.exercises\\\" matSort class=\\\"mat-elevation-z8\\\">\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"completion\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Completion </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.completion}} </mat-cell>\\n      </ng-container>\\n      <!-- Actions Column -->\\n      <ng-container matColumnDef=\\\"actions2\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n  \\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">\\n          <button *ngIf=\\\"element.completion !== 1\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"open(element)\\\"><mat-icon>play_arrow</mat-icon></button>\\n        </mat-cell>\\n      </ng-container>\\n  \\n      <mat-header-row *matHeaderRowDef=\\\"exoDisplayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: exoDisplayedColumns;\\\"></mat-row>\\n    </table>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"selectedTutorial\\\">\\n    <app-tutorial-reader [tutorial]=\\\"selectedTutorial\\\" (doneReading)=\\\"closeTutorial($event)\\\"></app-tutorial-reader>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BidLessonService} from '../bid-lesson.service';\nimport { BidLesson } from '../BidLesson';\nimport { BidExercise } from '../BidExercise';\n\nimport { Tutorial } from '../../tutorial-reader/Tutorial';\n/**\n * Present two tables:\n *  - a list of bidding tutorials for explaining the concepts, \n *  - a list of exercices to train on the subject\n * But when a tutorial is selected the tables are replaced by a markdown reader.\n * When an exercice is selected it goes to the big game with graphical cards.\n */\n@Component({\n  selector: 'app-bid-lesson',\n  templateUrl: './bid-lesson.component.html',\n  styleUrls: ['./bid-lesson.component.css']\n})\nexport class BidLessonComponent implements OnInit {\n  \n  lesson: BidLesson;\n  title: string;\n  selectedTutorial: Tutorial;\n\n  tutDisplayedColumns: string[] = ['name', 'actions'];\n  exoDisplayedColumns: string[] = ['name','completion', 'actions2'];\n  \n  constructor(private router: Router,\n    private bidService: BidLessonService) {\n      this.title = this.bidService.getLessonCategoryName();\n      this.bidService.getLesson().subscribe(\n        data => {\n          this.lesson = data;\n        });\n  }\n\n  ngOnInit() {\n  }\n\n  back() {\n    this.router.navigate(['bidLessonHome']);\n  }\n\n  closeTutorial(done:boolean) {\n    this.selectedTutorial = null;\n  }\n\n  open(element: BidExercise){\n    console.log(\"open \" + JSON.stringify(element));\n    this.bidService.setBidExercise(element);\n    this.router.navigate(['bidGame']);\n  }\n\n  // present the tutorial\n  learn(element:Tutorial){\n    console.log(\"learn \" + JSON.stringify(element));\n    this.selectedTutorial=element;\n  }\n}\n","module.exports = \"\\n.header-spacer {\\n    flex: 1 1 auto;\\n  }\\n  \\n.header-icon {\\n  padding: 0 14px;\\n}\\n  \\n.jbcard {\\n  max-width: 200px;\\n  margin-right: 15px;\\n  margin-bottom: 15px;\\n  box-shadow: 3px 3px #003300;\\n}\\n  \\n.centerred {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto\\n}\\n  \\n  \"","module.exports = \"<mat-toolbar style=\\\" border-bottom: 2px dotted blue;\\\">\\n  <a href=\\\"#/home\\\"><i class=\\\"material-icons\\\">home</i></a>\\n  <span class=\\\"header-spacer\\\"></span>\\n  <span>{{title}}</span>\\n</mat-toolbar>\\n<div class=\\\"container-fluid\\\">\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"400px\\\">\\n    <mat-grid-tile>\\n      <mat-card class=\\\"jbcard\\\">\\n        <mat-card-header>\\n          <div mat-card-avatar></div>\\n          <mat-card-title>Opening</mat-card-title>\\n          <mat-card-subtitle>Major 5</mat-card-subtitle>\\n        </mat-card-header>\\n        <img class=\\\"centerred\\\" mat-card-image src=\\\"assets/images/bidding-box-cards_1.png\\\" style=\\\"width:140px;\\\">\\n        <mat-card-content>\\n          <p>\\n            Learn how to open bidding as attacker\\n          </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"opening()\\\">Learn</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <mat-card class=\\\"jbcard\\\">\\n        <mat-card-header>\\n          <div mat-card-avatar></div>\\n          <mat-card-title>Response</mat-card-title>\\n          <mat-card-subtitle>First Round</mat-card-subtitle>\\n        </mat-card-header>\\n        <img class=\\\"centerred\\\" mat-card-image src=\\\"assets/images/bidding-box-cards_1.png\\\" style=\\\"width:140px;\\\">\\n        <mat-card-content>\\n          <p>\\n            Learn how to respond to opening\\n          </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"response()\\\">Learn</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <mat-card class=\\\"jbcard\\\">\\n        <mat-card-header>\\n          <div mat-card-avatar></div>\\n          <mat-card-title>Defense - Interventions</mat-card-title>\\n          <mat-card-subtitle>Major 5</mat-card-subtitle>\\n        </mat-card-header>\\n        <img class=\\\"centerred\\\" mat-card-image src=\\\"assets/images/bidding-box-cards_1.png\\\" style=\\\"width:140px;\\\">\\n        <mat-card-content>\\n          <p>\\n            Learn how to bid in defense\\n          </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"defense()\\\">Learn</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BidLessonService} from '../bid-lesson.service';\n\n/**\n * Present the list of bidding lessons per category. A category could be opening, defense, responses...\n */\n@Component({\n  selector: 'app-bid-lessons-home',\n  templateUrl: './bid-lessons-home.component.html',\n  styleUrls: ['./bid-lessons-home.component.css']\n})\nexport class BidLessonsHomeComponent implements OnInit {\n  title: string = \"Bidding Lesson Home\";\n  constructor(private router: Router,\n              private bidService: BidLessonService) { }\n\n  ngOnInit() {\n  }\n\n  \n  opening(){\n    console.log('Opening setting');\n    this.bidService.setLessonCategoryName('opening');\n    this.router.navigate(['bidLesson']);\n  }\n\n  defense() {\n    console.log('Defense setting');\n    this.bidService.setLessonCategoryName('defense');\n    this.router.navigate(['bidLesson']);\n  }\n\n  response() {\n    console.log('Response setting');\n    this.bidService.setLessonCategoryName('response');\n    this.router.navigate(['bidLesson']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown'\nimport { MatToolbarModule, \n         MatCardModule , \n         MatIconModule, \n         MatTableModule, \n         MatGridListModule,\n         MatStepperModule,\n         MatSortModule} from '@angular/material';\nimport { SharedModule } from '../shared/shared.module';\nimport { routes } from './routes';\nimport { HomeComponent } from './home/home.component';\nimport { BidLessonsHomeComponent } from './bidding/bid-lessons-home/bid-lessons-home.component';\nimport { BidLessonComponent } from './bidding/bid-lesson/bid-lesson.component';\nimport { BidGameComponent } from './bidding/bid-game/bid-game.component';\nimport { BidLessonService } from './bidding/bid-lesson.service';\nimport { TutorialReaderComponent } from './tutorial-reader/tutorial-reader.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      enableTracing: false\n      }),\n      MarkdownModule.forRoot(),\n      MatToolbarModule,\n      MatCardModule,\n      MatTableModule,\n      MatSortModule,\n      MatGridListModule,\n      MatStepperModule,\n      MatIconModule\n      ],\n  declarations: [HomeComponent, BidLessonsHomeComponent, BidLessonComponent, BidGameComponent, TutorialReaderComponent],\n  exports: [HomeComponent, BidLessonsHomeComponent, RouterModule],\n  providers: [BidLessonService]\n})\nexport class FeaturesModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"400px\\\">\\n    <mat-grid-tile>\\n        <app-tilecard id=\\\"learnbid\\\" [smImg]=\\\"'assets/images/bidding-box-cards_1.png'\\\"  \\n        [title]=\\\"'Bidding'\\\" \\n        [subTitle]=\\\"'5 card Major'\\\"\\n        [description]=\\\"'Learn how to bid using a step by step approach from beginner to expert'\\\" \\n        [buttonName]=\\\"'Learn'\\\" [urlPath]=\\\"'bidLessonHome'\\\">\\n      </app-tilecard>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        <app-tilecard id=\\\"learncard\\\" [smImg]=\\\"'assets/images/hand.png'\\\"  \\n        [title]=\\\"'Card Play'\\\" \\n        [subTitle]=\\\"'Attack Play'\\\"\\n        [description]=\\\"'Learn how to play your contract'\\\" \\n        [buttonName]=\\\"'Learn'\\\" [urlPath]=\\\"'cardLessonHome'\\\">\\n      </app-tilecard>\\n    </mat-grid-tile>\\n  \\n  <mat-grid-tile>\\n      <app-tilecard id=\\\"learncard\\\" [smImg]=\\\"'assets/images/hand.png'\\\"  \\n      [title]=\\\"'Card Play'\\\" \\n      [subTitle]=\\\"'Defence Play'\\\"\\n      [description]=\\\"'Learn how to play defense'\\\" \\n      [buttonName]=\\\"'Learn'\\\" [urlPath]=\\\"'defenseLessonHome'\\\">\\n    </app-tilecard>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { BidLessonsHomeComponent } from './bidding/bid-lessons-home/bid-lessons-home.component';\nimport { BidLessonComponent } from './bidding/bid-lesson/bid-lesson.component';\nimport { BidGameComponent } from './bidding/bid-game/bid-game.component';\nimport { TutorialReaderComponent } from './tutorial-reader/tutorial-reader.component';\n\nexport const routes: Routes = [\n    // tutorial, and play\n    { path: 'home', component: HomeComponent},\n    // all lessons about biddings\n    { path: 'bidLessonHome', component: BidLessonsHomeComponent},\n    // list of bidding lesson for a seletected category\n    { path: 'bidLesson', component: BidLessonComponent},\n    // bidding game with canvas\n    { path: 'bidGame' , component: BidGameComponent},\n    { path: 'tutorialReader', component: TutorialReaderComponent},\n    { path: '**', redirectTo: '/home', pathMatch: 'full'}\n]","// A tutorial is a metadata about a markdown file to render to the user.\nexport class Tutorial {\n    id: number;\n    name: string;\n    urlMDPath:string;\n    maxIndex: number = 0;\n}","module.exports = \".reader-content {\\n    width: 100%;\\n    height: 100%;\\n    -o-object-fit:contain;\\n       object-fit:contain;\\n  }\\n  \\n  .button-pad {\\n    padding: 10px;\\n  }\"","module.exports = \"\\n<mat-toolbar>\\n    <a (click)=\\\"back()\\\"><span><i class=\\\"header-icon material-icons\\\">arrow_back</i></span></a>\\n    <span class=\\\"header-spacer\\\"></span>\\n</mat-toolbar>\\n<markdown style=\\\"width=100%; object-fit=contain\\\" [src]=\\\"fileName\\\" ngPreserveWhitespaces></markdown>\\n<div class=\\\"row button-pad\\\">\\n    <div mat-dialog-actions>\\n          <button *ngIf=\\\"! first()\\\" mat-button (click)=\\\"previous()\\\" >Previous</button>\\n          <button *ngIf=\\\"! last()\\\" style=\\\"padding: 10 px;\\\" mat-button (click)=\\\"next()\\\" cdkFocusInitial>Next</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Tutorial } from './Tutorial';\n\n@Component({\n  selector: 'app-tutorial-reader',\n  templateUrl: './tutorial-reader.component.html',\n  styleUrls: ['./tutorial-reader.component.css']\n})\nexport class TutorialReaderComponent implements OnInit {\n\n  @Input()\n  tutorial: Tutorial;\n  @Output()\n  doneReading = new EventEmitter<boolean>();\n\n  fileName: string;\n  index: number = 0;\n\n  constructor() {\n    \n  }\n  \n  ngOnInit() {\n    if (this.tutorial.maxIndex == 0) {\n      this.fileName = this.tutorial.urlMDPath + \".md\";\n    } else {\n      this.fileName=this.tutorial.urlMDPath + \"_\" + this.index + \".md\";\n    }\n  \n  }\n\n  back(){\n    this.doneReading.emit(true);\n  }\n\n  next(){\n    if (this.index < this.tutorial.maxIndex)  {\n        this.index++;\n    }\n    this.fileName=this.tutorial.urlMDPath + \"_\" + this.index + \".md\";\n  }\n\n  previous() {\n    if (this.index > 0 )  {\n        this.index--;\n    }\n    this.fileName=this.tutorial.urlMDPath + \"_\" +  this.index + \".md\";\n  }\n\n  last(): boolean {\n    return (this.index == this.tutorial.maxIndex);\n  }\n\n  first(): boolean {\n      return (this.index == 0);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<footer>\\n  <br/>\\n  <p>&copy; Jerome Boyer - {{version}} </p>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  version: string = \"V0.0.1\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".mytopview {\\n    width: 100%;\\n    height: 15vh;\\n    color: white;\\n    text-align:center;\\n  }\"","module.exports = \"<div class=\\\"mytopview\\\" style=\\\"background-color: #003300\\\">\\n  <h2 style=\\\"color:white\\\">{{title}}</h2>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  title: string = \"JMC Bridge\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material';\nimport { MarkdownModule } from 'ngx-markdown'\nimport { TilecardComponent } from './tilecard/tilecard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TutorialDialogComponent } from './tutorial-dialog/tutorial-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MarkdownModule,\n    MatCardModule\n  ],\n  declarations: [TilecardComponent, HeaderComponent, FooterComponent, TutorialDialogComponent],\n  exports: [TilecardComponent, HeaderComponent, FooterComponent ]\n})\nexport class SharedModule { }\n","module.exports = \".jbcard {\\n  max-width: 200px;\\n  margin-right: 15px;\\n  margin-bottom: 15px;\\n  box-shadow: 3px 3px #003300;\\n}\\n\\n.centerred {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto\\n}\\n\"","module.exports = \"<mat-card class=\\\"jbcard\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{title}}</mat-card-title>\\n    <mat-card-subtitle  *ngIf=\\\"subTitle\\\">{{subTitle}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img class=\\\"centerred\\\" mat-card-image src={{smImg}} style=\\\"width:140px;\\\">\\n  <mat-card-content>\\n    <p>\\n      {{description}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"submit()\\\">{{buttonName}}</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router }   from '@angular/router';\n\n@Component({\n  selector: 'app-tilecard',\n  templateUrl: './tilecard.component.html',\n  styleUrls: ['./tilecard.component.css']\n})\nexport class TilecardComponent implements OnInit {\n  @Input()\n  title : string = \"Title\";\n  @Input()\n  subTitle: string = \"\";\n  @Input()\n  description: string = \"The content\";\n  @Input()\n  smImg: string = \"assets/images/study.jpg\";\n  @Input()\n  urlMdPath: string = \"\"\n  @Input()\n  buttonName: string = 'Submit';\n  @Input()\n  urlPath: string = 'home';\n\n  style: string ='';\n\n\n  constructor( private router: Router) { }\n\n  ngOnInit() {\n    this.style = \"background-image: url(smImg);background-size: cover;\"\n  }\n\n  submit() {\n    this.router.navigate([this.urlPath]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n  <markdown style=\\\"width=100%; object-fit=contain\\\" [src]=\\\"data.urlMdPath\\\" ngPreserveWhitespaces></markdown>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onDoneClick()\\\" cdkFocusInitial>Done</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n@Component({\n  selector: 'app-tutorial-dialog',\n  templateUrl: './tutorial-dialog.component.html',\n  styleUrls: ['./tutorial-dialog.component.css']\n})\nexport class TutorialDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n  \n\n  onDoneClick(): void {\n    this.dialogRef.close();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}